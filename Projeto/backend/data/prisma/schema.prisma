// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cars {
  id Int @id @default(autoincrement())
  brand String
  model String
  year Int
  plate String @unique 
  color String
  door_number Int
  kilometers Int
  picture String
  user Users @relation(fields: [user_id], references: [id])
  user_id Int
  service Services[]
  //service_id Int
}

model Users {
  id Int @id @default(autoincrement())
  username String
  email String @unique
  password String
  firstname String
  lastname String
  gender Gender
  role Role @default(CLIENT)
  inService Boolean?
  car Cars[]
  appointment Appointments[]
}

enum Role {
  ADMIN
  MECHANIC
  CLIENT
}

enum Gender {
  Male
  Female
}

model Services {
  id Int @id @default(autoincrement())
  name String
  description String
  price Decimal
  duration String
  status Status @default(Pending)
  car Cars @relation(fields: [car_id], references: [id])
  car_id Int
  appointment Appointments[]
  //appointment_id Int
}

enum Status {
  Pending
  Confirmed
  Completed
}

model Appointments {
  id Int @id @default(autoincrement())
  title String
  start DateTime
  end DateTime
  status Status @default(Pending)
  user Users @relation(fields: [user_id], references: [id])
  user_id Int
  service Services @relation(fields: [service_id], references: [id])
  service_id Int
}